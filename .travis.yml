# requires a current GIT_TOKEN on TravisCI to build docs
env:
  - PACKAGE_NAME: pymer4   # for the conda_upload.sh deploy script

language: minimal

before_install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source $HOME/miniconda/etc/profile.d/conda.sh && conda activate
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda info -a

install:
  - conda install -q conda-build conda-verify
  - conda build conda -c turbach -c defaults -c conda-forge
  - conda create --name pymer4_env pymer4 -c local -c turbach -c defaults -c conda-forge
  - conda activate pymer4_env  # run pytests in conda env
  - conda install black pytest-cov
  - conda list
  - lscpu
  - python -c 'import numpy; numpy.show_config()'

script:
  # - black -S --check --verbose --line-length=79 .
  - pytest -x --cov=pymer4

after_success:
  - conda install codecov && codecov

deploy:
  - provider: pages
    skip_cleanup: true
    github_token: $GITHUB_TOKEN   # get from github, set in TravisCI settings
    on:
      # any pulls to master will refresh docs
      branch: master
      # all_branches: true   # for testing only

  # upload github vN.N.N releases to main, others to pre-release or dry run
  - provider: script
    skip_cleanup: true
    script: bash ./ci/conda_upload.sh
    on:
      # safe to use all branches for testing b.c. conda uploads can be deleted
      all_branches: true  # for testing
      # tags: true
      # condition: $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$  # release tags only

#  # do not test on PyPI, version numbers are burned on first upload
#  - provider: pypi
#    skip_cleanup: true
#    user: "__token__"
#    password: $PYPI_TOKEN
#    on:
#      tags: true
#      condition: $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$
