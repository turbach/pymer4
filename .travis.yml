# requires a valid GIT_TOKEN, ANACONDA_TOKEN, PYPI_TOKEN in TravisCI settings
env:
  global:
    - PACKAGE_NAME: pymer4   # for the conda_upload.sh deploy script

language: minimal

jobs:
  include:
    - name: "3.6 build"
      env: PYV=3.6
    - name: "3.7 build"
      env: PYV=3.7
    - name: "3.8 build"
      env: PYV=3.8
    - name: "default python build"
      env: PYV=""

before_install:
  # b.c conda build GIT_BUILD_STR works (or not) in mysterious ways ...
  # pfx g means ordinary commit, r means github tagged vM.N.P release
  - if [[ $TRAVIS_TAG =~ v[0-9]+\.[0-9]+\.[0-9]+ ]]; then pfx=r; else pfx=g; fi
  - export GIT_ABBREV_COMMIT=${pfx}$(git log --full-history --abbrev-commit --oneline -n 1 | awk '{print $1}')
  - echo "git commit $GIT_ABBREV_COMMIT"
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source $HOME/miniconda/etc/profile.d/conda.sh && conda activate
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda info -a

install:
  - conda install -q conda-build conda-verify
  # - conda build --python=3.8 -c defaults -c conda-forge conda
  - conda build -c defaults -c conda-forge conda

script:
  # install and test py 3.x variants
  - conda create -n pyenv_${PYV} python=${PYV} pymer4 -c local -c defaults -c conda-forge
  - conda activate pyenv_${PYV}
  - conda install black pytest-cov
  - conda list
  - lscpu
  - python -c 'import numpy; numpy.show_config()'
  - black --check --verbose .
  - pytest --cov=pymer4

after_success:

before_deploy:
  # install necessary packages and refresh the docs before deployment
  - conda install sphinx sphinx_bootstrap_theme sphinx-gallery -c conda-forge
  - cd docs && make clean && make html && cd .. && pwd

# Gotcha: deploy on conditions are bash if [[ ... ]]; then deploy ; fi
# and **NOT** TravisCI condition syntax used for conditional execution
deploy:

  # moved codecov from after_success
  - provider: script
    skip_cleanup: true
    script: conda install codecov && codecov
    on:
      branch: master
      condition: $PYV == "3.8"

  # allow any commit to master or dev to refresh the docs on gh-pages
  - provider: pages
    skip_cleanup: true
    keep-history: false
    github_token: $GITHUB_TOKEN  # from github, set in TravisCI settings
    local_dir: ./docs/_build/html
    on:
      # all_branches: true  # testing only
      branch: master
      condition: $PYV == "3.8"

  # this script manages conda package uploads. It routes routine
  # master commits to the pre-release label and manual github releases
  # tagged vM.N.P to the main label.
  - provider: script
    skip_cleanup: true
    script: bash ./ci/conda_upload.sh
    on:
      # condition: $PYV =~ ^3\.[678]$  # python 3.6, 3.7, 3.8 jobs
      condition: $PYV == "3.8"
      all_branches: true  # dry-run the script on any branch

  # only upload manual github releases tagged vM.N.P to PyPI
  # so M.N.P on Anaconda Cloud channel/label/main == PyPI
  - provider: pypi
    skip_cleanup: true
    user: "__token__"
    password: $PYPI_TOKEN
    on:
      branch: master
      tags: true
      condition: $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ && $PYV == "3.8"
